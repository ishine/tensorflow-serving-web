/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var tensorflow_core_framework_tensor_pb = require('../../../tensorflow/core/framework/tensor_pb.js');
goog.object.extend(proto, tensorflow_core_framework_tensor_pb);
var tensorflow_core_protobuf_graph_debug_info_pb = require('../../../tensorflow/core/protobuf/graph_debug_info_pb.js');
goog.object.extend(proto, tensorflow_core_protobuf_graph_debug_info_pb);
goog.exportSymbol('proto.tensorflow.CodeLocation', null, global);
goog.exportSymbol('proto.tensorflow.DebugEvent', null, global);
goog.exportSymbol('proto.tensorflow.DebugMetadata', null, global);
goog.exportSymbol('proto.tensorflow.DebuggedGraph', null, global);
goog.exportSymbol('proto.tensorflow.Execution', null, global);
goog.exportSymbol('proto.tensorflow.GraphExecutionTrace', null, global);
goog.exportSymbol('proto.tensorflow.GraphOpCreation', null, global);
goog.exportSymbol('proto.tensorflow.SourceFile', null, global);
goog.exportSymbol('proto.tensorflow.StackFrameWithId', null, global);
goog.exportSymbol('proto.tensorflow.TensorDebugMode', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.DebugEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.DebugEvent.oneofGroups_);
};
goog.inherits(proto.tensorflow.DebugEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.DebugEvent.displayName = 'proto.tensorflow.DebugEvent';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.DebugEvent.oneofGroups_ = [[3,4,6,7,8,9,10,11]];

/**
 * @enum {number}
 */
proto.tensorflow.DebugEvent.WhatCase = {
  WHAT_NOT_SET: 0,
  DEBUG_METADATA: 3,
  SOURCE_FILE: 4,
  STACK_FRAME_WITH_ID: 6,
  GRAPH_OP_CREATION: 7,
  DEBUGGED_GRAPH: 8,
  EXECUTION: 9,
  GRAPH_EXECUTION_TRACE: 10,
  GRAPH_ID: 11
};

/**
 * @return {proto.tensorflow.DebugEvent.WhatCase}
 */
proto.tensorflow.DebugEvent.prototype.getWhatCase = function() {
  return /** @type {proto.tensorflow.DebugEvent.WhatCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.DebugEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.DebugEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.DebugEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.DebugEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebugEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    wallTime: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    step: jspb.Message.getFieldWithDefault(msg, 2, 0),
    debugMetadata: (f = msg.getDebugMetadata()) && proto.tensorflow.DebugMetadata.toObject(includeInstance, f),
    sourceFile: (f = msg.getSourceFile()) && proto.tensorflow.SourceFile.toObject(includeInstance, f),
    stackFrameWithId: (f = msg.getStackFrameWithId()) && proto.tensorflow.StackFrameWithId.toObject(includeInstance, f),
    graphOpCreation: (f = msg.getGraphOpCreation()) && proto.tensorflow.GraphOpCreation.toObject(includeInstance, f),
    debuggedGraph: (f = msg.getDebuggedGraph()) && proto.tensorflow.DebuggedGraph.toObject(includeInstance, f),
    execution: (f = msg.getExecution()) && proto.tensorflow.Execution.toObject(includeInstance, f),
    graphExecutionTrace: (f = msg.getGraphExecutionTrace()) && proto.tensorflow.GraphExecutionTrace.toObject(includeInstance, f),
    graphId: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.DebugEvent}
 */
proto.tensorflow.DebugEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.DebugEvent;
  return proto.tensorflow.DebugEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.DebugEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.DebugEvent}
 */
proto.tensorflow.DebugEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWallTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStep(value);
      break;
    case 3:
      var value = new proto.tensorflow.DebugMetadata;
      reader.readMessage(value,proto.tensorflow.DebugMetadata.deserializeBinaryFromReader);
      msg.setDebugMetadata(value);
      break;
    case 4:
      var value = new proto.tensorflow.SourceFile;
      reader.readMessage(value,proto.tensorflow.SourceFile.deserializeBinaryFromReader);
      msg.setSourceFile(value);
      break;
    case 6:
      var value = new proto.tensorflow.StackFrameWithId;
      reader.readMessage(value,proto.tensorflow.StackFrameWithId.deserializeBinaryFromReader);
      msg.setStackFrameWithId(value);
      break;
    case 7:
      var value = new proto.tensorflow.GraphOpCreation;
      reader.readMessage(value,proto.tensorflow.GraphOpCreation.deserializeBinaryFromReader);
      msg.setGraphOpCreation(value);
      break;
    case 8:
      var value = new proto.tensorflow.DebuggedGraph;
      reader.readMessage(value,proto.tensorflow.DebuggedGraph.deserializeBinaryFromReader);
      msg.setDebuggedGraph(value);
      break;
    case 9:
      var value = new proto.tensorflow.Execution;
      reader.readMessage(value,proto.tensorflow.Execution.deserializeBinaryFromReader);
      msg.setExecution(value);
      break;
    case 10:
      var value = new proto.tensorflow.GraphExecutionTrace;
      reader.readMessage(value,proto.tensorflow.GraphExecutionTrace.deserializeBinaryFromReader);
      msg.setGraphExecutionTrace(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGraphId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.DebugEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.DebugEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.DebugEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebugEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWallTime();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getStep();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDebugMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.DebugMetadata.serializeBinaryToWriter
    );
  }
  f = message.getSourceFile();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tensorflow.SourceFile.serializeBinaryToWriter
    );
  }
  f = message.getStackFrameWithId();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tensorflow.StackFrameWithId.serializeBinaryToWriter
    );
  }
  f = message.getGraphOpCreation();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.tensorflow.GraphOpCreation.serializeBinaryToWriter
    );
  }
  f = message.getDebuggedGraph();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.tensorflow.DebuggedGraph.serializeBinaryToWriter
    );
  }
  f = message.getExecution();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.tensorflow.Execution.serializeBinaryToWriter
    );
  }
  f = message.getGraphExecutionTrace();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.tensorflow.GraphExecutionTrace.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional double wall_time = 1;
 * @return {number}
 */
proto.tensorflow.DebugEvent.prototype.getWallTime = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.tensorflow.DebugEvent.prototype.setWallTime = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int64 step = 2;
 * @return {number}
 */
proto.tensorflow.DebugEvent.prototype.getStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.DebugEvent.prototype.setStep = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional DebugMetadata debug_metadata = 3;
 * @return {?proto.tensorflow.DebugMetadata}
 */
proto.tensorflow.DebugEvent.prototype.getDebugMetadata = function() {
  return /** @type{?proto.tensorflow.DebugMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.DebugMetadata, 3));
};


/** @param {?proto.tensorflow.DebugMetadata|undefined} value */
proto.tensorflow.DebugEvent.prototype.setDebugMetadata = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.tensorflow.DebugEvent.oneofGroups_[0], value);
};


proto.tensorflow.DebugEvent.prototype.clearDebugMetadata = function() {
  this.setDebugMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.DebugEvent.prototype.hasDebugMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SourceFile source_file = 4;
 * @return {?proto.tensorflow.SourceFile}
 */
proto.tensorflow.DebugEvent.prototype.getSourceFile = function() {
  return /** @type{?proto.tensorflow.SourceFile} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.SourceFile, 4));
};


/** @param {?proto.tensorflow.SourceFile|undefined} value */
proto.tensorflow.DebugEvent.prototype.setSourceFile = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.tensorflow.DebugEvent.oneofGroups_[0], value);
};


proto.tensorflow.DebugEvent.prototype.clearSourceFile = function() {
  this.setSourceFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.DebugEvent.prototype.hasSourceFile = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StackFrameWithId stack_frame_with_id = 6;
 * @return {?proto.tensorflow.StackFrameWithId}
 */
proto.tensorflow.DebugEvent.prototype.getStackFrameWithId = function() {
  return /** @type{?proto.tensorflow.StackFrameWithId} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.StackFrameWithId, 6));
};


/** @param {?proto.tensorflow.StackFrameWithId|undefined} value */
proto.tensorflow.DebugEvent.prototype.setStackFrameWithId = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.tensorflow.DebugEvent.oneofGroups_[0], value);
};


proto.tensorflow.DebugEvent.prototype.clearStackFrameWithId = function() {
  this.setStackFrameWithId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.DebugEvent.prototype.hasStackFrameWithId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GraphOpCreation graph_op_creation = 7;
 * @return {?proto.tensorflow.GraphOpCreation}
 */
proto.tensorflow.DebugEvent.prototype.getGraphOpCreation = function() {
  return /** @type{?proto.tensorflow.GraphOpCreation} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.GraphOpCreation, 7));
};


/** @param {?proto.tensorflow.GraphOpCreation|undefined} value */
proto.tensorflow.DebugEvent.prototype.setGraphOpCreation = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.tensorflow.DebugEvent.oneofGroups_[0], value);
};


proto.tensorflow.DebugEvent.prototype.clearGraphOpCreation = function() {
  this.setGraphOpCreation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.DebugEvent.prototype.hasGraphOpCreation = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DebuggedGraph debugged_graph = 8;
 * @return {?proto.tensorflow.DebuggedGraph}
 */
proto.tensorflow.DebugEvent.prototype.getDebuggedGraph = function() {
  return /** @type{?proto.tensorflow.DebuggedGraph} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.DebuggedGraph, 8));
};


/** @param {?proto.tensorflow.DebuggedGraph|undefined} value */
proto.tensorflow.DebugEvent.prototype.setDebuggedGraph = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.tensorflow.DebugEvent.oneofGroups_[0], value);
};


proto.tensorflow.DebugEvent.prototype.clearDebuggedGraph = function() {
  this.setDebuggedGraph(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.DebugEvent.prototype.hasDebuggedGraph = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Execution execution = 9;
 * @return {?proto.tensorflow.Execution}
 */
proto.tensorflow.DebugEvent.prototype.getExecution = function() {
  return /** @type{?proto.tensorflow.Execution} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.Execution, 9));
};


/** @param {?proto.tensorflow.Execution|undefined} value */
proto.tensorflow.DebugEvent.prototype.setExecution = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.tensorflow.DebugEvent.oneofGroups_[0], value);
};


proto.tensorflow.DebugEvent.prototype.clearExecution = function() {
  this.setExecution(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.DebugEvent.prototype.hasExecution = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional GraphExecutionTrace graph_execution_trace = 10;
 * @return {?proto.tensorflow.GraphExecutionTrace}
 */
proto.tensorflow.DebugEvent.prototype.getGraphExecutionTrace = function() {
  return /** @type{?proto.tensorflow.GraphExecutionTrace} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.GraphExecutionTrace, 10));
};


/** @param {?proto.tensorflow.GraphExecutionTrace|undefined} value */
proto.tensorflow.DebugEvent.prototype.setGraphExecutionTrace = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.tensorflow.DebugEvent.oneofGroups_[0], value);
};


proto.tensorflow.DebugEvent.prototype.clearGraphExecutionTrace = function() {
  this.setGraphExecutionTrace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.DebugEvent.prototype.hasGraphExecutionTrace = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string graph_id = 11;
 * @return {string}
 */
proto.tensorflow.DebugEvent.prototype.getGraphId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.tensorflow.DebugEvent.prototype.setGraphId = function(value) {
  jspb.Message.setOneofField(this, 11, proto.tensorflow.DebugEvent.oneofGroups_[0], value);
};


proto.tensorflow.DebugEvent.prototype.clearGraphId = function() {
  jspb.Message.setOneofField(this, 11, proto.tensorflow.DebugEvent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.DebugEvent.prototype.hasGraphId = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.DebugMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.DebugMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.DebugMetadata.displayName = 'proto.tensorflow.DebugMetadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.DebugMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.DebugMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.DebugMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebugMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    tensorflowVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileVersion: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.DebugMetadata}
 */
proto.tensorflow.DebugMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.DebugMetadata;
  return proto.tensorflow.DebugMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.DebugMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.DebugMetadata}
 */
proto.tensorflow.DebugMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTensorflowVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.DebugMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.DebugMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.DebugMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebugMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTensorflowVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tensorflow_version = 1;
 * @return {string}
 */
proto.tensorflow.DebugMetadata.prototype.getTensorflowVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.DebugMetadata.prototype.setTensorflowVersion = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string file_version = 2;
 * @return {string}
 */
proto.tensorflow.DebugMetadata.prototype.getFileVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.DebugMetadata.prototype.setFileVersion = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.SourceFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.SourceFile.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.SourceFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.SourceFile.displayName = 'proto.tensorflow.SourceFile';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.SourceFile.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.SourceFile.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.SourceFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.SourceFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.SourceFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    filePath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hostName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    linesList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.SourceFile}
 */
proto.tensorflow.SourceFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.SourceFile;
  return proto.tensorflow.SourceFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.SourceFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.SourceFile}
 */
proto.tensorflow.SourceFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilePath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addLines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.SourceFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.SourceFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.SourceFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.SourceFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilePath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHostName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLinesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string file_path = 1;
 * @return {string}
 */
proto.tensorflow.SourceFile.prototype.getFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.SourceFile.prototype.setFilePath = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string host_name = 2;
 * @return {string}
 */
proto.tensorflow.SourceFile.prototype.getHostName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.SourceFile.prototype.setHostName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string lines = 3;
 * @return {!Array<string>}
 */
proto.tensorflow.SourceFile.prototype.getLinesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.tensorflow.SourceFile.prototype.setLinesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.tensorflow.SourceFile.prototype.addLines = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.tensorflow.SourceFile.prototype.clearLinesList = function() {
  this.setLinesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.StackFrameWithId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.StackFrameWithId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.StackFrameWithId.displayName = 'proto.tensorflow.StackFrameWithId';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.StackFrameWithId.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.StackFrameWithId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.StackFrameWithId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.StackFrameWithId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileLineCol: (f = msg.getFileLineCol()) && tensorflow_core_protobuf_graph_debug_info_pb.GraphDebugInfo.FileLineCol.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.StackFrameWithId}
 */
proto.tensorflow.StackFrameWithId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.StackFrameWithId;
  return proto.tensorflow.StackFrameWithId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.StackFrameWithId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.StackFrameWithId}
 */
proto.tensorflow.StackFrameWithId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new tensorflow_core_protobuf_graph_debug_info_pb.GraphDebugInfo.FileLineCol;
      reader.readMessage(value,tensorflow_core_protobuf_graph_debug_info_pb.GraphDebugInfo.FileLineCol.deserializeBinaryFromReader);
      msg.setFileLineCol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.StackFrameWithId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.StackFrameWithId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.StackFrameWithId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.StackFrameWithId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileLineCol();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tensorflow_core_protobuf_graph_debug_info_pb.GraphDebugInfo.FileLineCol.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tensorflow.StackFrameWithId.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.StackFrameWithId.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional GraphDebugInfo.FileLineCol file_line_col = 2;
 * @return {?proto.tensorflow.GraphDebugInfo.FileLineCol}
 */
proto.tensorflow.StackFrameWithId.prototype.getFileLineCol = function() {
  return /** @type{?proto.tensorflow.GraphDebugInfo.FileLineCol} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_protobuf_graph_debug_info_pb.GraphDebugInfo.FileLineCol, 2));
};


/** @param {?proto.tensorflow.GraphDebugInfo.FileLineCol|undefined} value */
proto.tensorflow.StackFrameWithId.prototype.setFileLineCol = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.StackFrameWithId.prototype.clearFileLineCol = function() {
  this.setFileLineCol(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.StackFrameWithId.prototype.hasFileLineCol = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.CodeLocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.CodeLocation.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.CodeLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.CodeLocation.displayName = 'proto.tensorflow.CodeLocation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.CodeLocation.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.CodeLocation.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.CodeLocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.CodeLocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.CodeLocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stackFrameIdsList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.CodeLocation}
 */
proto.tensorflow.CodeLocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.CodeLocation;
  return proto.tensorflow.CodeLocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.CodeLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.CodeLocation}
 */
proto.tensorflow.CodeLocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addStackFrameIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.CodeLocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.CodeLocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.CodeLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.CodeLocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStackFrameIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string host_name = 1;
 * @return {string}
 */
proto.tensorflow.CodeLocation.prototype.getHostName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.CodeLocation.prototype.setHostName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string stack_frame_ids = 2;
 * @return {!Array<string>}
 */
proto.tensorflow.CodeLocation.prototype.getStackFrameIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.tensorflow.CodeLocation.prototype.setStackFrameIdsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.tensorflow.CodeLocation.prototype.addStackFrameIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.tensorflow.CodeLocation.prototype.clearStackFrameIdsList = function() {
  this.setStackFrameIdsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.GraphOpCreation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.GraphOpCreation.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.GraphOpCreation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.GraphOpCreation.displayName = 'proto.tensorflow.GraphOpCreation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.GraphOpCreation.repeatedFields_ = [6,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.GraphOpCreation.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.GraphOpCreation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.GraphOpCreation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphOpCreation.toObject = function(includeInstance, msg) {
  var f, obj = {
    opType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    opName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    graphName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    graphId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deviceName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    inputNamesList: jspb.Message.getRepeatedField(msg, 6),
    numOutputs: jspb.Message.getFieldWithDefault(msg, 7, 0),
    codeLocation: (f = msg.getCodeLocation()) && proto.tensorflow.CodeLocation.toObject(includeInstance, f),
    outputTensorIdsList: jspb.Message.getRepeatedField(msg, 9)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.GraphOpCreation}
 */
proto.tensorflow.GraphOpCreation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.GraphOpCreation;
  return proto.tensorflow.GraphOpCreation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.GraphOpCreation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.GraphOpCreation}
 */
proto.tensorflow.GraphOpCreation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGraphName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGraphId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addInputNames(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumOutputs(value);
      break;
    case 8:
      var value = new proto.tensorflow.CodeLocation;
      reader.readMessage(value,proto.tensorflow.CodeLocation.deserializeBinaryFromReader);
      msg.setCodeLocation(value);
      break;
    case 9:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setOutputTensorIdsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.GraphOpCreation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.GraphOpCreation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.GraphOpCreation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphOpCreation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGraphName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGraphId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInputNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getNumOutputs();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCodeLocation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.tensorflow.CodeLocation.serializeBinaryToWriter
    );
  }
  f = message.getOutputTensorIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      9,
      f
    );
  }
};


/**
 * optional string op_type = 1;
 * @return {string}
 */
proto.tensorflow.GraphOpCreation.prototype.getOpType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.GraphOpCreation.prototype.setOpType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string op_name = 2;
 * @return {string}
 */
proto.tensorflow.GraphOpCreation.prototype.getOpName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.GraphOpCreation.prototype.setOpName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string graph_name = 3;
 * @return {string}
 */
proto.tensorflow.GraphOpCreation.prototype.getGraphName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tensorflow.GraphOpCreation.prototype.setGraphName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string graph_id = 4;
 * @return {string}
 */
proto.tensorflow.GraphOpCreation.prototype.getGraphId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.tensorflow.GraphOpCreation.prototype.setGraphId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_name = 5;
 * @return {string}
 */
proto.tensorflow.GraphOpCreation.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.tensorflow.GraphOpCreation.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string input_names = 6;
 * @return {!Array<string>}
 */
proto.tensorflow.GraphOpCreation.prototype.getInputNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.tensorflow.GraphOpCreation.prototype.setInputNamesList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.tensorflow.GraphOpCreation.prototype.addInputNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.tensorflow.GraphOpCreation.prototype.clearInputNamesList = function() {
  this.setInputNamesList([]);
};


/**
 * optional int32 num_outputs = 7;
 * @return {number}
 */
proto.tensorflow.GraphOpCreation.prototype.getNumOutputs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.tensorflow.GraphOpCreation.prototype.setNumOutputs = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional CodeLocation code_location = 8;
 * @return {?proto.tensorflow.CodeLocation}
 */
proto.tensorflow.GraphOpCreation.prototype.getCodeLocation = function() {
  return /** @type{?proto.tensorflow.CodeLocation} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.CodeLocation, 8));
};


/** @param {?proto.tensorflow.CodeLocation|undefined} value */
proto.tensorflow.GraphOpCreation.prototype.setCodeLocation = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.tensorflow.GraphOpCreation.prototype.clearCodeLocation = function() {
  this.setCodeLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.GraphOpCreation.prototype.hasCodeLocation = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated int32 output_tensor_ids = 9;
 * @return {!Array<number>}
 */
proto.tensorflow.GraphOpCreation.prototype.getOutputTensorIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<number>} value */
proto.tensorflow.GraphOpCreation.prototype.setOutputTensorIdsList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.tensorflow.GraphOpCreation.prototype.addOutputTensorIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.tensorflow.GraphOpCreation.prototype.clearOutputTensorIdsList = function() {
  this.setOutputTensorIdsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.DebuggedGraph = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.DebuggedGraph.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.DebuggedGraph, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.DebuggedGraph.displayName = 'proto.tensorflow.DebuggedGraph';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.DebuggedGraph.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.DebuggedGraph.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.DebuggedGraph.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.DebuggedGraph} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebuggedGraph.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    graphName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    instrumentedOpsList: jspb.Message.getRepeatedField(msg, 3),
    originalGraphDef: msg.getOriginalGraphDef_asB64(),
    instrumentedGraphDef: msg.getInstrumentedGraphDef_asB64(),
    outerContextId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.DebuggedGraph}
 */
proto.tensorflow.DebuggedGraph.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.DebuggedGraph;
  return proto.tensorflow.DebuggedGraph.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.DebuggedGraph} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.DebuggedGraph}
 */
proto.tensorflow.DebuggedGraph.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGraphId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGraphName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addInstrumentedOps(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOriginalGraphDef(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInstrumentedGraphDef(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOuterContextId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.DebuggedGraph.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.DebuggedGraph.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.DebuggedGraph} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebuggedGraph.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGraphName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInstrumentedOpsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getOriginalGraphDef_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getInstrumentedGraphDef_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getOuterContextId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string graph_id = 1;
 * @return {string}
 */
proto.tensorflow.DebuggedGraph.prototype.getGraphId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.DebuggedGraph.prototype.setGraphId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string graph_name = 2;
 * @return {string}
 */
proto.tensorflow.DebuggedGraph.prototype.getGraphName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.DebuggedGraph.prototype.setGraphName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string instrumented_ops = 3;
 * @return {!Array<string>}
 */
proto.tensorflow.DebuggedGraph.prototype.getInstrumentedOpsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.tensorflow.DebuggedGraph.prototype.setInstrumentedOpsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.tensorflow.DebuggedGraph.prototype.addInstrumentedOps = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.tensorflow.DebuggedGraph.prototype.clearInstrumentedOpsList = function() {
  this.setInstrumentedOpsList([]);
};


/**
 * optional bytes original_graph_def = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tensorflow.DebuggedGraph.prototype.getOriginalGraphDef = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes original_graph_def = 4;
 * This is a type-conversion wrapper around `getOriginalGraphDef()`
 * @return {string}
 */
proto.tensorflow.DebuggedGraph.prototype.getOriginalGraphDef_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOriginalGraphDef()));
};


/**
 * optional bytes original_graph_def = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOriginalGraphDef()`
 * @return {!Uint8Array}
 */
proto.tensorflow.DebuggedGraph.prototype.getOriginalGraphDef_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOriginalGraphDef()));
};


/** @param {!(string|Uint8Array)} value */
proto.tensorflow.DebuggedGraph.prototype.setOriginalGraphDef = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes instrumented_graph_def = 5;
 * @return {!(string|Uint8Array)}
 */
proto.tensorflow.DebuggedGraph.prototype.getInstrumentedGraphDef = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes instrumented_graph_def = 5;
 * This is a type-conversion wrapper around `getInstrumentedGraphDef()`
 * @return {string}
 */
proto.tensorflow.DebuggedGraph.prototype.getInstrumentedGraphDef_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInstrumentedGraphDef()));
};


/**
 * optional bytes instrumented_graph_def = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInstrumentedGraphDef()`
 * @return {!Uint8Array}
 */
proto.tensorflow.DebuggedGraph.prototype.getInstrumentedGraphDef_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInstrumentedGraphDef()));
};


/** @param {!(string|Uint8Array)} value */
proto.tensorflow.DebuggedGraph.prototype.setInstrumentedGraphDef = function(value) {
  jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional string outer_context_id = 6;
 * @return {string}
 */
proto.tensorflow.DebuggedGraph.prototype.getOuterContextId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.tensorflow.DebuggedGraph.prototype.setOuterContextId = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.Execution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.Execution.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.Execution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.Execution.displayName = 'proto.tensorflow.Execution';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.Execution.repeatedFields_ = [4,5,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.Execution.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.Execution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.Execution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Execution.toObject = function(includeInstance, msg) {
  var f, obj = {
    opType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numOutputs: jspb.Message.getFieldWithDefault(msg, 2, 0),
    graphId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    inputTensorIdsList: jspb.Message.getRepeatedField(msg, 4),
    outputTensorIdsList: jspb.Message.getRepeatedField(msg, 5),
    tensorDebugMode: jspb.Message.getFieldWithDefault(msg, 6, 0),
    tensorProtosList: jspb.Message.toObjectList(msg.getTensorProtosList(),
    tensorflow_core_framework_tensor_pb.TensorProto.toObject, includeInstance),
    codeLocation: (f = msg.getCodeLocation()) && proto.tensorflow.CodeLocation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.Execution}
 */
proto.tensorflow.Execution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.Execution;
  return proto.tensorflow.Execution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.Execution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.Execution}
 */
proto.tensorflow.Execution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumOutputs(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGraphId(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setInputTensorIdsList(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setOutputTensorIdsList(value);
      break;
    case 6:
      var value = /** @type {!proto.tensorflow.TensorDebugMode} */ (reader.readEnum());
      msg.setTensorDebugMode(value);
      break;
    case 7:
      var value = new tensorflow_core_framework_tensor_pb.TensorProto;
      reader.readMessage(value,tensorflow_core_framework_tensor_pb.TensorProto.deserializeBinaryFromReader);
      msg.addTensorProtos(value);
      break;
    case 8:
      var value = new proto.tensorflow.CodeLocation;
      reader.readMessage(value,proto.tensorflow.CodeLocation.deserializeBinaryFromReader);
      msg.setCodeLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.Execution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.Execution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.Execution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.Execution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumOutputs();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getGraphId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInputTensorIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      4,
      f
    );
  }
  f = message.getOutputTensorIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      5,
      f
    );
  }
  f = message.getTensorDebugMode();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getTensorProtosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      tensorflow_core_framework_tensor_pb.TensorProto.serializeBinaryToWriter
    );
  }
  f = message.getCodeLocation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.tensorflow.CodeLocation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string op_type = 1;
 * @return {string}
 */
proto.tensorflow.Execution.prototype.getOpType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.Execution.prototype.setOpType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 num_outputs = 2;
 * @return {number}
 */
proto.tensorflow.Execution.prototype.getNumOutputs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.Execution.prototype.setNumOutputs = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string graph_id = 3;
 * @return {string}
 */
proto.tensorflow.Execution.prototype.getGraphId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tensorflow.Execution.prototype.setGraphId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated int64 input_tensor_ids = 4;
 * @return {!Array<number>}
 */
proto.tensorflow.Execution.prototype.getInputTensorIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.tensorflow.Execution.prototype.setInputTensorIdsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.tensorflow.Execution.prototype.addInputTensorIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.tensorflow.Execution.prototype.clearInputTensorIdsList = function() {
  this.setInputTensorIdsList([]);
};


/**
 * repeated int64 output_tensor_ids = 5;
 * @return {!Array<number>}
 */
proto.tensorflow.Execution.prototype.getOutputTensorIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<number>} value */
proto.tensorflow.Execution.prototype.setOutputTensorIdsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.tensorflow.Execution.prototype.addOutputTensorIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.tensorflow.Execution.prototype.clearOutputTensorIdsList = function() {
  this.setOutputTensorIdsList([]);
};


/**
 * optional TensorDebugMode tensor_debug_mode = 6;
 * @return {!proto.tensorflow.TensorDebugMode}
 */
proto.tensorflow.Execution.prototype.getTensorDebugMode = function() {
  return /** @type {!proto.tensorflow.TensorDebugMode} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.tensorflow.TensorDebugMode} value */
proto.tensorflow.Execution.prototype.setTensorDebugMode = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * repeated TensorProto tensor_protos = 7;
 * @return {!Array<!proto.tensorflow.TensorProto>}
 */
proto.tensorflow.Execution.prototype.getTensorProtosList = function() {
  return /** @type{!Array<!proto.tensorflow.TensorProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorflow_core_framework_tensor_pb.TensorProto, 7));
};


/** @param {!Array<!proto.tensorflow.TensorProto>} value */
proto.tensorflow.Execution.prototype.setTensorProtosList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.tensorflow.TensorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.TensorProto}
 */
proto.tensorflow.Execution.prototype.addTensorProtos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.tensorflow.TensorProto, opt_index);
};


proto.tensorflow.Execution.prototype.clearTensorProtosList = function() {
  this.setTensorProtosList([]);
};


/**
 * optional CodeLocation code_location = 8;
 * @return {?proto.tensorflow.CodeLocation}
 */
proto.tensorflow.Execution.prototype.getCodeLocation = function() {
  return /** @type{?proto.tensorflow.CodeLocation} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.CodeLocation, 8));
};


/** @param {?proto.tensorflow.CodeLocation|undefined} value */
proto.tensorflow.Execution.prototype.setCodeLocation = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.tensorflow.Execution.prototype.clearCodeLocation = function() {
  this.setCodeLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.Execution.prototype.hasCodeLocation = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.GraphExecutionTrace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.GraphExecutionTrace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.GraphExecutionTrace.displayName = 'proto.tensorflow.GraphExecutionTrace';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.GraphExecutionTrace.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.GraphExecutionTrace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.GraphExecutionTrace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphExecutionTrace.toObject = function(includeInstance, msg) {
  var f, obj = {
    tfdbgContextId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    opName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    outputSlot: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tensorDebugMode: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tensorProto: (f = msg.getTensorProto()) && tensorflow_core_framework_tensor_pb.TensorProto.toObject(includeInstance, f),
    deviceName: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.GraphExecutionTrace}
 */
proto.tensorflow.GraphExecutionTrace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.GraphExecutionTrace;
  return proto.tensorflow.GraphExecutionTrace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.GraphExecutionTrace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.GraphExecutionTrace}
 */
proto.tensorflow.GraphExecutionTrace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTfdbgContextId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOutputSlot(value);
      break;
    case 4:
      var value = /** @type {!proto.tensorflow.TensorDebugMode} */ (reader.readEnum());
      msg.setTensorDebugMode(value);
      break;
    case 5:
      var value = new tensorflow_core_framework_tensor_pb.TensorProto;
      reader.readMessage(value,tensorflow_core_framework_tensor_pb.TensorProto.deserializeBinaryFromReader);
      msg.setTensorProto(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.GraphExecutionTrace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.GraphExecutionTrace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.GraphExecutionTrace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphExecutionTrace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTfdbgContextId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOutputSlot();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTensorDebugMode();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getTensorProto();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      tensorflow_core_framework_tensor_pb.TensorProto.serializeBinaryToWriter
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string tfdbg_context_id = 1;
 * @return {string}
 */
proto.tensorflow.GraphExecutionTrace.prototype.getTfdbgContextId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.GraphExecutionTrace.prototype.setTfdbgContextId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string op_name = 2;
 * @return {string}
 */
proto.tensorflow.GraphExecutionTrace.prototype.getOpName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.GraphExecutionTrace.prototype.setOpName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 output_slot = 3;
 * @return {number}
 */
proto.tensorflow.GraphExecutionTrace.prototype.getOutputSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.GraphExecutionTrace.prototype.setOutputSlot = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional TensorDebugMode tensor_debug_mode = 4;
 * @return {!proto.tensorflow.TensorDebugMode}
 */
proto.tensorflow.GraphExecutionTrace.prototype.getTensorDebugMode = function() {
  return /** @type {!proto.tensorflow.TensorDebugMode} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.tensorflow.TensorDebugMode} value */
proto.tensorflow.GraphExecutionTrace.prototype.setTensorDebugMode = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional TensorProto tensor_proto = 5;
 * @return {?proto.tensorflow.TensorProto}
 */
proto.tensorflow.GraphExecutionTrace.prototype.getTensorProto = function() {
  return /** @type{?proto.tensorflow.TensorProto} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_framework_tensor_pb.TensorProto, 5));
};


/** @param {?proto.tensorflow.TensorProto|undefined} value */
proto.tensorflow.GraphExecutionTrace.prototype.setTensorProto = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.tensorflow.GraphExecutionTrace.prototype.clearTensorProto = function() {
  this.setTensorProto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.GraphExecutionTrace.prototype.hasTensorProto = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string device_name = 6;
 * @return {string}
 */
proto.tensorflow.GraphExecutionTrace.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.tensorflow.GraphExecutionTrace.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.tensorflow.TensorDebugMode = {
  UNSPECIFIED: 0,
  NO_TENSOR: 1,
  CURT_HEALTH: 2,
  CONCISE_HEALTH: 3,
  FULL_HEALTH: 4,
  SHAPE: 5,
  FULL_NUMERICS: 6,
  FULL_TENSOR: 7,
  REDUCE_INF_NAN_THREE_SLOTS: 8
};

goog.object.extend(exports, proto.tensorflow);
