/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.tensorflow.AutotuneResult', null, global);
goog.exportSymbol('proto.tensorflow.AutotuneResult.ConvKey', null, global);
goog.exportSymbol('proto.tensorflow.AutotuneResult.FailureKind', null, global);
goog.exportSymbol('proto.tensorflow.AutotuneResult.FailureResult', null, global);
goog.exportSymbol('proto.tensorflow.AutotuneResult.GemmKey', null, global);
goog.exportSymbol('proto.tensorflow.AutotuningLog', null, global);
goog.exportSymbol('proto.tensorflow.ComputeCapability', null, global);
goog.exportSymbol('proto.tensorflow.CudnnVersion', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.CudnnVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.CudnnVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.CudnnVersion.displayName = 'proto.tensorflow.CudnnVersion';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.CudnnVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.CudnnVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.CudnnVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.CudnnVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    major: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    patch: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.CudnnVersion}
 */
proto.tensorflow.CudnnVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.CudnnVersion;
  return proto.tensorflow.CudnnVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.CudnnVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.CudnnVersion}
 */
proto.tensorflow.CudnnVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMajor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.CudnnVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.CudnnVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.CudnnVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.CudnnVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMajor();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMinor();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPatch();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 major = 1;
 * @return {number}
 */
proto.tensorflow.CudnnVersion.prototype.getMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.CudnnVersion.prototype.setMajor = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 minor = 2;
 * @return {number}
 */
proto.tensorflow.CudnnVersion.prototype.getMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.CudnnVersion.prototype.setMinor = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 patch = 3;
 * @return {number}
 */
proto.tensorflow.CudnnVersion.prototype.getPatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.CudnnVersion.prototype.setPatch = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.ComputeCapability = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.ComputeCapability, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.ComputeCapability.displayName = 'proto.tensorflow.ComputeCapability';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.ComputeCapability.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.ComputeCapability.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.ComputeCapability} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ComputeCapability.toObject = function(includeInstance, msg) {
  var f, obj = {
    major: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minor: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.ComputeCapability}
 */
proto.tensorflow.ComputeCapability.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.ComputeCapability;
  return proto.tensorflow.ComputeCapability.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.ComputeCapability} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.ComputeCapability}
 */
proto.tensorflow.ComputeCapability.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMajor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.ComputeCapability.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.ComputeCapability.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.ComputeCapability} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ComputeCapability.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMajor();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMinor();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 major = 1;
 * @return {number}
 */
proto.tensorflow.ComputeCapability.prototype.getMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.ComputeCapability.prototype.setMajor = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 minor = 2;
 * @return {number}
 */
proto.tensorflow.ComputeCapability.prototype.getMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.ComputeCapability.prototype.setMinor = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.AutotuneResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.AutotuneResult.oneofGroups_);
};
goog.inherits(proto.tensorflow.AutotuneResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.AutotuneResult.displayName = 'proto.tensorflow.AutotuneResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.AutotuneResult.oneofGroups_ = [[5,6]];

/**
 * @enum {number}
 */
proto.tensorflow.AutotuneResult.KeyCase = {
  KEY_NOT_SET: 0,
  CONV: 5,
  GEMM: 6
};

/**
 * @return {proto.tensorflow.AutotuneResult.KeyCase}
 */
proto.tensorflow.AutotuneResult.prototype.getKeyCase = function() {
  return /** @type {proto.tensorflow.AutotuneResult.KeyCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.AutotuneResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.AutotuneResult.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.AutotuneResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.AutotuneResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuneResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    scratchBytes: jspb.Message.getFieldWithDefault(msg, 8, 0),
    runTime: (f = msg.getRunTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && proto.tensorflow.AutotuneResult.FailureResult.toObject(includeInstance, f),
    conv: (f = msg.getConv()) && proto.tensorflow.AutotuneResult.ConvKey.toObject(includeInstance, f),
    gemm: (f = msg.getGemm()) && proto.tensorflow.AutotuneResult.GemmKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.AutotuneResult}
 */
proto.tensorflow.AutotuneResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.AutotuneResult;
  return proto.tensorflow.AutotuneResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.AutotuneResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.AutotuneResult}
 */
proto.tensorflow.AutotuneResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScratchBytes(value);
      break;
    case 9:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setRunTime(value);
      break;
    case 7:
      var value = new proto.tensorflow.AutotuneResult.FailureResult;
      reader.readMessage(value,proto.tensorflow.AutotuneResult.FailureResult.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    case 5:
      var value = new proto.tensorflow.AutotuneResult.ConvKey;
      reader.readMessage(value,proto.tensorflow.AutotuneResult.ConvKey.deserializeBinaryFromReader);
      msg.setConv(value);
      break;
    case 6:
      var value = new proto.tensorflow.AutotuneResult.GemmKey;
      reader.readMessage(value,proto.tensorflow.AutotuneResult.GemmKey.deserializeBinaryFromReader);
      msg.setGemm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.AutotuneResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.AutotuneResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.AutotuneResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuneResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScratchBytes();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getRunTime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.tensorflow.AutotuneResult.FailureResult.serializeBinaryToWriter
    );
  }
  f = message.getConv();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tensorflow.AutotuneResult.ConvKey.serializeBinaryToWriter
    );
  }
  f = message.getGemm();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tensorflow.AutotuneResult.GemmKey.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.tensorflow.AutotuneResult.FailureKind = {
  UNKNOWN: 0,
  REDZONE_MODIFIED: 1,
  WRONG_RESULT: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.AutotuneResult.FailureResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.AutotuneResult.FailureResult.oneofGroups_);
};
goog.inherits(proto.tensorflow.AutotuneResult.FailureResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.AutotuneResult.FailureResult.displayName = 'proto.tensorflow.AutotuneResult.FailureResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.AutotuneResult.FailureResult.oneofGroups_ = [[11,12]];

/**
 * @enum {number}
 */
proto.tensorflow.AutotuneResult.FailureResult.KeyCase = {
  KEY_NOT_SET: 0,
  REFERENCE_CONV: 11,
  REFERENCE_GEMM: 12
};

/**
 * @return {proto.tensorflow.AutotuneResult.FailureResult.KeyCase}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.getKeyCase = function() {
  return /** @type {proto.tensorflow.AutotuneResult.FailureResult.KeyCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.AutotuneResult.FailureResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.AutotuneResult.FailureResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.AutotuneResult.FailureResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuneResult.FailureResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    referenceConv: (f = msg.getReferenceConv()) && proto.tensorflow.AutotuneResult.ConvKey.toObject(includeInstance, f),
    referenceGemm: (f = msg.getReferenceGemm()) && proto.tensorflow.AutotuneResult.GemmKey.toObject(includeInstance, f),
    bufferAddress: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.AutotuneResult.FailureResult}
 */
proto.tensorflow.AutotuneResult.FailureResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.AutotuneResult.FailureResult;
  return proto.tensorflow.AutotuneResult.FailureResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.AutotuneResult.FailureResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.AutotuneResult.FailureResult}
 */
proto.tensorflow.AutotuneResult.FailureResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tensorflow.AutotuneResult.FailureKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 11:
      var value = new proto.tensorflow.AutotuneResult.ConvKey;
      reader.readMessage(value,proto.tensorflow.AutotuneResult.ConvKey.deserializeBinaryFromReader);
      msg.setReferenceConv(value);
      break;
    case 12:
      var value = new proto.tensorflow.AutotuneResult.GemmKey;
      reader.readMessage(value,proto.tensorflow.AutotuneResult.GemmKey.deserializeBinaryFromReader);
      msg.setReferenceGemm(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBufferAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.AutotuneResult.FailureResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.AutotuneResult.FailureResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuneResult.FailureResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReferenceConv();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.tensorflow.AutotuneResult.ConvKey.serializeBinaryToWriter
    );
  }
  f = message.getReferenceGemm();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.tensorflow.AutotuneResult.GemmKey.serializeBinaryToWriter
    );
  }
  f = message.getBufferAddress();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
};


/**
 * optional FailureKind kind = 1;
 * @return {!proto.tensorflow.AutotuneResult.FailureKind}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.getKind = function() {
  return /** @type {!proto.tensorflow.AutotuneResult.FailureKind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.tensorflow.AutotuneResult.FailureKind} value */
proto.tensorflow.AutotuneResult.FailureResult.prototype.setKind = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.AutotuneResult.FailureResult.prototype.setMsg = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ConvKey reference_conv = 11;
 * @return {?proto.tensorflow.AutotuneResult.ConvKey}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.getReferenceConv = function() {
  return /** @type{?proto.tensorflow.AutotuneResult.ConvKey} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.AutotuneResult.ConvKey, 11));
};


/** @param {?proto.tensorflow.AutotuneResult.ConvKey|undefined} value */
proto.tensorflow.AutotuneResult.FailureResult.prototype.setReferenceConv = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.tensorflow.AutotuneResult.FailureResult.oneofGroups_[0], value);
};


proto.tensorflow.AutotuneResult.FailureResult.prototype.clearReferenceConv = function() {
  this.setReferenceConv(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.hasReferenceConv = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional GemmKey reference_gemm = 12;
 * @return {?proto.tensorflow.AutotuneResult.GemmKey}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.getReferenceGemm = function() {
  return /** @type{?proto.tensorflow.AutotuneResult.GemmKey} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.AutotuneResult.GemmKey, 12));
};


/** @param {?proto.tensorflow.AutotuneResult.GemmKey|undefined} value */
proto.tensorflow.AutotuneResult.FailureResult.prototype.setReferenceGemm = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.tensorflow.AutotuneResult.FailureResult.oneofGroups_[0], value);
};


proto.tensorflow.AutotuneResult.FailureResult.prototype.clearReferenceGemm = function() {
  this.setReferenceGemm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.hasReferenceGemm = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int64 buffer_address = 13;
 * @return {number}
 */
proto.tensorflow.AutotuneResult.FailureResult.prototype.getBufferAddress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.tensorflow.AutotuneResult.FailureResult.prototype.setBufferAddress = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.AutotuneResult.ConvKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.AutotuneResult.ConvKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.AutotuneResult.ConvKey.displayName = 'proto.tensorflow.AutotuneResult.ConvKey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.AutotuneResult.ConvKey.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.AutotuneResult.ConvKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.AutotuneResult.ConvKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuneResult.ConvKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    algorithm: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tensorOpsEnabled: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.AutotuneResult.ConvKey}
 */
proto.tensorflow.AutotuneResult.ConvKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.AutotuneResult.ConvKey;
  return proto.tensorflow.AutotuneResult.ConvKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.AutotuneResult.ConvKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.AutotuneResult.ConvKey}
 */
proto.tensorflow.AutotuneResult.ConvKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAlgorithm(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTensorOpsEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.AutotuneResult.ConvKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.AutotuneResult.ConvKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.AutotuneResult.ConvKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuneResult.ConvKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlgorithm();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTensorOpsEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int64 algorithm = 1;
 * @return {number}
 */
proto.tensorflow.AutotuneResult.ConvKey.prototype.getAlgorithm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.AutotuneResult.ConvKey.prototype.setAlgorithm = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool tensor_ops_enabled = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.AutotuneResult.ConvKey.prototype.getTensorOpsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.tensorflow.AutotuneResult.ConvKey.prototype.setTensorOpsEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.AutotuneResult.GemmKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.AutotuneResult.GemmKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.AutotuneResult.GemmKey.displayName = 'proto.tensorflow.AutotuneResult.GemmKey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.AutotuneResult.GemmKey.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.AutotuneResult.GemmKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.AutotuneResult.GemmKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuneResult.GemmKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    algorithm: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.AutotuneResult.GemmKey}
 */
proto.tensorflow.AutotuneResult.GemmKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.AutotuneResult.GemmKey;
  return proto.tensorflow.AutotuneResult.GemmKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.AutotuneResult.GemmKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.AutotuneResult.GemmKey}
 */
proto.tensorflow.AutotuneResult.GemmKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAlgorithm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.AutotuneResult.GemmKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.AutotuneResult.GemmKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.AutotuneResult.GemmKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuneResult.GemmKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlgorithm();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 algorithm = 1;
 * @return {number}
 */
proto.tensorflow.AutotuneResult.GemmKey.prototype.getAlgorithm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.AutotuneResult.GemmKey.prototype.setAlgorithm = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 scratch_bytes = 8;
 * @return {number}
 */
proto.tensorflow.AutotuneResult.prototype.getScratchBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.tensorflow.AutotuneResult.prototype.setScratchBytes = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Duration run_time = 9;
 * @return {?proto.google.protobuf.Duration}
 */
proto.tensorflow.AutotuneResult.prototype.getRunTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 9));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.tensorflow.AutotuneResult.prototype.setRunTime = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.tensorflow.AutotuneResult.prototype.clearRunTime = function() {
  this.setRunTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.AutotuneResult.prototype.hasRunTime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional FailureResult failure = 7;
 * @return {?proto.tensorflow.AutotuneResult.FailureResult}
 */
proto.tensorflow.AutotuneResult.prototype.getFailure = function() {
  return /** @type{?proto.tensorflow.AutotuneResult.FailureResult} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.AutotuneResult.FailureResult, 7));
};


/** @param {?proto.tensorflow.AutotuneResult.FailureResult|undefined} value */
proto.tensorflow.AutotuneResult.prototype.setFailure = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.tensorflow.AutotuneResult.prototype.clearFailure = function() {
  this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.AutotuneResult.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ConvKey conv = 5;
 * @return {?proto.tensorflow.AutotuneResult.ConvKey}
 */
proto.tensorflow.AutotuneResult.prototype.getConv = function() {
  return /** @type{?proto.tensorflow.AutotuneResult.ConvKey} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.AutotuneResult.ConvKey, 5));
};


/** @param {?proto.tensorflow.AutotuneResult.ConvKey|undefined} value */
proto.tensorflow.AutotuneResult.prototype.setConv = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.tensorflow.AutotuneResult.oneofGroups_[0], value);
};


proto.tensorflow.AutotuneResult.prototype.clearConv = function() {
  this.setConv(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.AutotuneResult.prototype.hasConv = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GemmKey gemm = 6;
 * @return {?proto.tensorflow.AutotuneResult.GemmKey}
 */
proto.tensorflow.AutotuneResult.prototype.getGemm = function() {
  return /** @type{?proto.tensorflow.AutotuneResult.GemmKey} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.AutotuneResult.GemmKey, 6));
};


/** @param {?proto.tensorflow.AutotuneResult.GemmKey|undefined} value */
proto.tensorflow.AutotuneResult.prototype.setGemm = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.tensorflow.AutotuneResult.oneofGroups_[0], value);
};


proto.tensorflow.AutotuneResult.prototype.clearGemm = function() {
  this.setGemm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.AutotuneResult.prototype.hasGemm = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.AutotuningLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.AutotuningLog.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.AutotuningLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.AutotuningLog.displayName = 'proto.tensorflow.AutotuningLog';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.AutotuningLog.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.AutotuningLog.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.AutotuningLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.AutotuningLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuningLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    instr: (f = msg.getInstr()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.tensorflow.AutotuneResult.toObject, includeInstance),
    cudnnVersion: (f = msg.getCudnnVersion()) && proto.tensorflow.CudnnVersion.toObject(includeInstance, f),
    computeCapability: (f = msg.getComputeCapability()) && proto.tensorflow.ComputeCapability.toObject(includeInstance, f),
    devicePciBusId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    blasVersion: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.AutotuningLog}
 */
proto.tensorflow.AutotuningLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.AutotuningLog;
  return proto.tensorflow.AutotuningLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.AutotuningLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.AutotuningLog}
 */
proto.tensorflow.AutotuningLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setInstr(value);
      break;
    case 2:
      var value = new proto.tensorflow.AutotuneResult;
      reader.readMessage(value,proto.tensorflow.AutotuneResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 3:
      var value = new proto.tensorflow.CudnnVersion;
      reader.readMessage(value,proto.tensorflow.CudnnVersion.deserializeBinaryFromReader);
      msg.setCudnnVersion(value);
      break;
    case 4:
      var value = new proto.tensorflow.ComputeCapability;
      reader.readMessage(value,proto.tensorflow.ComputeCapability.deserializeBinaryFromReader);
      msg.setComputeCapability(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicePciBusId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlasVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.AutotuningLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.AutotuningLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.AutotuningLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutotuningLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tensorflow.AutotuneResult.serializeBinaryToWriter
    );
  }
  f = message.getCudnnVersion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.CudnnVersion.serializeBinaryToWriter
    );
  }
  f = message.getComputeCapability();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tensorflow.ComputeCapability.serializeBinaryToWriter
    );
  }
  f = message.getDevicePciBusId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBlasVersion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional google.protobuf.Any instr = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.tensorflow.AutotuningLog.prototype.getInstr = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.tensorflow.AutotuningLog.prototype.setInstr = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tensorflow.AutotuningLog.prototype.clearInstr = function() {
  this.setInstr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.AutotuningLog.prototype.hasInstr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated AutotuneResult results = 2;
 * @return {!Array<!proto.tensorflow.AutotuneResult>}
 */
proto.tensorflow.AutotuningLog.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.tensorflow.AutotuneResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.AutotuneResult, 2));
};


/** @param {!Array<!proto.tensorflow.AutotuneResult>} value */
proto.tensorflow.AutotuningLog.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tensorflow.AutotuneResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.AutotuneResult}
 */
proto.tensorflow.AutotuningLog.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tensorflow.AutotuneResult, opt_index);
};


proto.tensorflow.AutotuningLog.prototype.clearResultsList = function() {
  this.setResultsList([]);
};


/**
 * optional CudnnVersion cudnn_version = 3;
 * @return {?proto.tensorflow.CudnnVersion}
 */
proto.tensorflow.AutotuningLog.prototype.getCudnnVersion = function() {
  return /** @type{?proto.tensorflow.CudnnVersion} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.CudnnVersion, 3));
};


/** @param {?proto.tensorflow.CudnnVersion|undefined} value */
proto.tensorflow.AutotuningLog.prototype.setCudnnVersion = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tensorflow.AutotuningLog.prototype.clearCudnnVersion = function() {
  this.setCudnnVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.AutotuningLog.prototype.hasCudnnVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ComputeCapability compute_capability = 4;
 * @return {?proto.tensorflow.ComputeCapability}
 */
proto.tensorflow.AutotuningLog.prototype.getComputeCapability = function() {
  return /** @type{?proto.tensorflow.ComputeCapability} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.ComputeCapability, 4));
};


/** @param {?proto.tensorflow.ComputeCapability|undefined} value */
proto.tensorflow.AutotuningLog.prototype.setComputeCapability = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.tensorflow.AutotuningLog.prototype.clearComputeCapability = function() {
  this.setComputeCapability(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorflow.AutotuningLog.prototype.hasComputeCapability = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string device_pci_bus_id = 5;
 * @return {string}
 */
proto.tensorflow.AutotuningLog.prototype.getDevicePciBusId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.tensorflow.AutotuningLog.prototype.setDevicePciBusId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string blas_version = 6;
 * @return {string}
 */
proto.tensorflow.AutotuningLog.prototype.getBlasVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.tensorflow.AutotuningLog.prototype.setBlasVersion = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


goog.object.extend(exports, proto.tensorflow);
