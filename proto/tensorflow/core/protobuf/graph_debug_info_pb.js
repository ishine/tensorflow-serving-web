/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.tensorflow.GraphDebugInfo', null, global);
goog.exportSymbol('proto.tensorflow.GraphDebugInfo.FileLineCol', null, global);
goog.exportSymbol('proto.tensorflow.GraphDebugInfo.StackTrace', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.GraphDebugInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.GraphDebugInfo.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.GraphDebugInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.GraphDebugInfo.displayName = 'proto.tensorflow.GraphDebugInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.GraphDebugInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.GraphDebugInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.GraphDebugInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.GraphDebugInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphDebugInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    filesList: jspb.Message.getRepeatedField(msg, 1),
    tracesMap: (f = msg.getTracesMap()) ? f.toObject(includeInstance, proto.tensorflow.GraphDebugInfo.StackTrace.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.GraphDebugInfo}
 */
proto.tensorflow.GraphDebugInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.GraphDebugInfo;
  return proto.tensorflow.GraphDebugInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.GraphDebugInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.GraphDebugInfo}
 */
proto.tensorflow.GraphDebugInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addFiles(value);
      break;
    case 2:
      var value = msg.getTracesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.tensorflow.GraphDebugInfo.StackTrace.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.GraphDebugInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.GraphDebugInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.GraphDebugInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphDebugInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTracesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.tensorflow.GraphDebugInfo.StackTrace.serializeBinaryToWriter);
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.GraphDebugInfo.FileLineCol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.GraphDebugInfo.FileLineCol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.GraphDebugInfo.FileLineCol.displayName = 'proto.tensorflow.GraphDebugInfo.FileLineCol';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.GraphDebugInfo.FileLineCol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.GraphDebugInfo.FileLineCol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    line: jspb.Message.getFieldWithDefault(msg, 2, 0),
    col: jspb.Message.getFieldWithDefault(msg, 3, 0),
    func: jspb.Message.getFieldWithDefault(msg, 4, ""),
    code: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.GraphDebugInfo.FileLineCol}
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.GraphDebugInfo.FileLineCol;
  return proto.tensorflow.GraphDebugInfo.FileLineCol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.GraphDebugInfo.FileLineCol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.GraphDebugInfo.FileLineCol}
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFileIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLine(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCol(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.GraphDebugInfo.FileLineCol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.GraphDebugInfo.FileLineCol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileIndex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLine();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCol();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFunc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 file_index = 1;
 * @return {number}
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.getFileIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.setFileIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 line = 2;
 * @return {number}
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.getLine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.setLine = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 col = 3;
 * @return {number}
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.getCol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.setCol = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string func = 4;
 * @return {string}
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.getFunc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.setFunc = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string code = 5;
 * @return {string}
 */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.tensorflow.GraphDebugInfo.FileLineCol.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.GraphDebugInfo.StackTrace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.GraphDebugInfo.StackTrace.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.GraphDebugInfo.StackTrace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.GraphDebugInfo.StackTrace.displayName = 'proto.tensorflow.GraphDebugInfo.StackTrace';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.GraphDebugInfo.StackTrace.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.GraphDebugInfo.StackTrace.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.GraphDebugInfo.StackTrace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.GraphDebugInfo.StackTrace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphDebugInfo.StackTrace.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileLineColsList: jspb.Message.toObjectList(msg.getFileLineColsList(),
    proto.tensorflow.GraphDebugInfo.FileLineCol.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.GraphDebugInfo.StackTrace}
 */
proto.tensorflow.GraphDebugInfo.StackTrace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.GraphDebugInfo.StackTrace;
  return proto.tensorflow.GraphDebugInfo.StackTrace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.GraphDebugInfo.StackTrace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.GraphDebugInfo.StackTrace}
 */
proto.tensorflow.GraphDebugInfo.StackTrace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.GraphDebugInfo.FileLineCol;
      reader.readMessage(value,proto.tensorflow.GraphDebugInfo.FileLineCol.deserializeBinaryFromReader);
      msg.addFileLineCols(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.GraphDebugInfo.StackTrace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.GraphDebugInfo.StackTrace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.GraphDebugInfo.StackTrace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphDebugInfo.StackTrace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileLineColsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tensorflow.GraphDebugInfo.FileLineCol.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FileLineCol file_line_cols = 1;
 * @return {!Array<!proto.tensorflow.GraphDebugInfo.FileLineCol>}
 */
proto.tensorflow.GraphDebugInfo.StackTrace.prototype.getFileLineColsList = function() {
  return /** @type{!Array<!proto.tensorflow.GraphDebugInfo.FileLineCol>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.GraphDebugInfo.FileLineCol, 1));
};


/** @param {!Array<!proto.tensorflow.GraphDebugInfo.FileLineCol>} value */
proto.tensorflow.GraphDebugInfo.StackTrace.prototype.setFileLineColsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorflow.GraphDebugInfo.FileLineCol=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.GraphDebugInfo.FileLineCol}
 */
proto.tensorflow.GraphDebugInfo.StackTrace.prototype.addFileLineCols = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.GraphDebugInfo.FileLineCol, opt_index);
};


proto.tensorflow.GraphDebugInfo.StackTrace.prototype.clearFileLineColsList = function() {
  this.setFileLineColsList([]);
};


/**
 * repeated string files = 1;
 * @return {!Array<string>}
 */
proto.tensorflow.GraphDebugInfo.prototype.getFilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.tensorflow.GraphDebugInfo.prototype.setFilesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.tensorflow.GraphDebugInfo.prototype.addFiles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.tensorflow.GraphDebugInfo.prototype.clearFilesList = function() {
  this.setFilesList([]);
};


/**
 * map<string, StackTrace> traces = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.tensorflow.GraphDebugInfo.StackTrace>}
 */
proto.tensorflow.GraphDebugInfo.prototype.getTracesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.tensorflow.GraphDebugInfo.StackTrace>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.tensorflow.GraphDebugInfo.StackTrace));
};


proto.tensorflow.GraphDebugInfo.prototype.clearTracesMap = function() {
  this.getTracesMap().clear();
};


goog.object.extend(exports, proto.tensorflow);
